{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\n/* global window, document */\n\n\nimport globalVars from './globalVars';\nvar resize = {\n  // eslint-disable-line prefer-const\n  width: 0,\n  height: 0\n};\nvar scroll = {\n  // eslint-disable-line prefer-const\n  delta: 0,\n  top: 0\n};\nvar touch = {\n  // eslint-disable-line prefer-const\n  axisIntention: '',\n  startX: 0,\n  startY: 0,\n  deltaX: 0,\n  deltaY: 0\n};\nvar INTENTION_THRESHOLD = 5;\n\nvar getXY = function getXY(pos) {\n  var t = {\n    x: 0,\n    y: 0\n  }; // eslint-disable-line prefer-const\n\n  var docBody = document.body;\n  var docEl = document.documentElement;\n\n  if (pos.pageX || pos.pageY) {\n    t.x = pos.pageX;\n    t.y = pos.pageY;\n  } else {\n    t.x = pos.clientX + docBody.scrollLeft + docEl.scrollLeft;\n    t.y = pos.clientY + docBody.scrollTop + docEl.scrollTop;\n  }\n\n  return t;\n};\n/**\n * ArgmentedEvent will hold some global information, such like window scroll postion,\n * so that those information is only calculated once.\n * @param {Object} option - The option for SyntheticEvent\n */\n\n\nvar AugmentedEvent = function () {\n  function AugmentedEvent() {\n    var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, AugmentedEvent);\n\n    var mainType = (option.mainType || '').toLowerCase();\n    var subType = (option.subType || '').toLowerCase();\n    this.mainType = mainType;\n    this.subType = subType;\n    this.type = mainType + subType.charAt(0).toUpperCase() + subType.slice(1) || '';\n    this.scroll = scroll;\n    this.resize = resize;\n    this.touch = touch;\n  }\n\n  _createClass(AugmentedEvent, [{\n    key: 'update',\n    value: function update(e) {\n      var mainType = this.mainType,\n          subType = this.subType;\n      var docEl = document.documentElement;\n\n      if (globalVars.enableScrollInfo && (mainType === 'scroll' || mainType === 'touchmove')) {\n        var top = docEl.scrollTop + document.body.scrollTop; // Prevent delta from being 0\n\n        if (top !== this.scroll.top) {\n          this.scroll.delta = top - this.scroll.top;\n          this.scroll.top = top;\n        }\n      }\n\n      if (globalVars.enableResizeInfo && mainType === 'resize') {\n        this.resize.width = window.innerWidth || docEl.clientWidth;\n        this.resize.height = window.innerHeight || docEl.clientHeight;\n      }\n\n      if (globalVars.enableTouchInfo && e.touches && (mainType === 'touchstart' || mainType === 'touchmove' || mainType === 'touchend')) {\n        var pos = void 0;\n        var absX = void 0;\n        var absY = void 0;\n\n        if (mainType === 'touchstart' || subType === 'start') {\n          pos = getXY(e.touches[0]);\n          this.touch.axisIntention = '';\n          this.touch.startX = pos.x;\n          this.touch.startY = pos.y;\n          this.touch.deltaX = 0;\n          this.touch.deltaY = 0;\n        } else if (mainType === 'touchmove') {\n          pos = getXY(e.touches[0]);\n          this.touch.deltaX = pos.x - this.touch.startX;\n          this.touch.deltaY = pos.y - this.touch.startY;\n\n          if (this.touch.axisIntention === '') {\n            absX = Math.abs(this.touch.deltaX);\n            absY = Math.abs(this.touch.deltaY);\n\n            if (absX > INTENTION_THRESHOLD && absX >= absY) {\n              this.touch.axisIntention = 'x';\n            } else if (absY > INTENTION_THRESHOLD && absY > absX) {\n              this.touch.axisIntention = 'y';\n            }\n          }\n        }\n      }\n    }\n  }]);\n\n  return AugmentedEvent;\n}();\n\nexport default AugmentedEvent;","map":null,"metadata":{},"sourceType":"module"}