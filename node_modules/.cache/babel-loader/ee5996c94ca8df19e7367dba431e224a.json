{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\GitHub\\\\CodefyCSLanding\\\\src\\\\components\\\\CircleProgressbar.js\";\nimport React, { Component } from 'react';\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar/\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Reveal from 'react-reveal';\n\nclass Cprogress extends Component {\n  render() {\n    return React.createElement(\"section\", {\n      className: \"progress_bar_area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sec_title mb_70 wow fadeInUp\",\n      \"data-wow-delay\": \"0.4s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"f_p f_size_30 l_height40 f_600 t_color text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Measure and increase \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), \" your reach\")), React.createElement(Reveal, {\n      bottom: true,\n      cascade: true,\n      duration: 1200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-3 col-md-4 progress_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(VisibilitySensor, {\n      partialVisibility: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, ({\n      isVisible\n    }) => {\n      const percentage = isVisible ? 60 : 0;\n      return React.createElement(CircularProgressbar, {\n        value: percentage,\n        text: \"\".concat(percentage, \"%\"),\n        strokeWidth: 5,\n        styles: buildStyles({\n          rotation: 0,\n          textSize: '20px',\n          pathTransitionDuration: 1,\n          pathColor: '#aa6ffa',\n          textColor: '#051441',\n          trailColor: '#f1f1fa'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Innovations\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Charles Jeffrey up the kyver loo in my flat blimey.!\")), React.createElement(\"div\", {\n      className: \"col-lg-3 col-md-4 progress_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(VisibilitySensor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, ({\n      isVisible\n    }) => {\n      const percentage = isVisible ? 82 : 0;\n      return React.createElement(CircularProgressbar, {\n        value: percentage,\n        text: \"\".concat(percentage, \"%\"),\n        strokeWidth: 5,\n        styles: buildStyles({\n          rotation: 0,\n          textSize: '20px',\n          pathTransitionDuration: 1,\n          pathColor: '#f3af4e',\n          textColor: '#051441',\n          trailColor: '#f1f1fa'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Great Tests\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Charles Jeffrey up the kyver loo in my flat blimey.!\")), React.createElement(\"div\", {\n      className: \"col-lg-3 col-md-4 progress_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(VisibilitySensor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, ({\n      isVisible\n    }) => {\n      const percentage = isVisible ? 92 : 0;\n      return React.createElement(CircularProgressbar, {\n        value: percentage,\n        text: \"\".concat(percentage, \"%\"),\n        strokeWidth: 5,\n        styles: buildStyles({\n          rotation: 0,\n          textSize: '20px',\n          pathTransitionDuration: 1,\n          pathColor: '#fa6fd1',\n          textColor: '#051441',\n          trailColor: '#f1f1fa'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Big Projects\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Charles Jeffrey up the kyver loo in my flat blimey.!\")), React.createElement(\"div\", {\n      className: \"col-lg-3 col-md-4 progress_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(VisibilitySensor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, ({\n      isVisible\n    }) => {\n      const percentage = isVisible ? 52 : 0;\n      return React.createElement(CircularProgressbar, {\n        value: percentage,\n        text: \"\".concat(percentage, \"%\"),\n        strokeWidth: 5,\n        styles: buildStyles({\n          rotation: 0,\n          textSize: '20px',\n          pathTransitionDuration: 1,\n          pathColor: '#6fadfa',\n          textColor: '#051441',\n          trailColor: '#f1f1fa'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Action Plans\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Charles Jeffrey up the kyver loo in my flat blimey.!\")))), React.createElement(\"div\", {\n      className: \"br_bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Cprogress;","map":{"version":3,"sources":["C:/Users/josep/Documents/GitHub/CodefyCSLanding/src/components/CircleProgressbar.js"],"names":["React","Component","VisibilitySensor","CircularProgressbar","buildStyles","Reveal","Cprogress","render","isVisible","percentage","rotation","textSize","pathTransitionDuration","pathColor","textColor","trailColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nimport { CircularProgressbar, buildStyles  } from \"react-circular-progressbar/\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Reveal from 'react-reveal';\r\n\r\nclass Cprogress extends Component{\r\n    render(){\r\n        return(\r\n            <section className=\"progress_bar_area\">\r\n                <div className=\"container\">\r\n                    <div className=\"sec_title mb_70 wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                        <h2 className=\"f_p f_size_30 l_height40 f_600 t_color text-center\">Measure and increase <br/> your reach</h2>\r\n                    </div>\r\n                    <Reveal bottom cascade duration={1200}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-4 progress_item\">\r\n                            <VisibilitySensor  partialVisibility>\r\n                                {({ isVisible }) => {\r\n                                const percentage = isVisible ? 60 : 0;\r\n                                return (\r\n                                    <CircularProgressbar\r\n                                    value={percentage}\r\n                                    text={`${percentage}%`}\r\n                                    strokeWidth={5}\r\n                                    styles={buildStyles({\r\n                                        rotation: 0,\r\n                                        textSize: '20px',\r\n                                        pathTransitionDuration: 1,\r\n                                        pathColor: '#aa6ffa',\r\n                                        textColor: '#051441',\r\n                                        trailColor: '#f1f1fa',\r\n                                    })}\r\n                                    />\r\n                                );\r\n                                }}\r\n                            </VisibilitySensor>\r\n                            <h4>Innovations</h4>\r\n                            <p>Charles Jeffrey up the kyver loo in my flat blimey.!</p>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-4 progress_item\">\r\n                            <VisibilitySensor>\r\n                                {({ isVisible }) => {\r\n                                    const percentage = isVisible ? 82 : 0;\r\n                                    return (\r\n                                        <CircularProgressbar\r\n                                        value={percentage}\r\n                                        text={`${percentage}%`}\r\n                                        strokeWidth={5}\r\n                                        styles={buildStyles({\r\n                                            rotation: 0,\r\n                                            textSize: '20px',\r\n                                            pathTransitionDuration: 1,\r\n                                            pathColor: '#f3af4e',\r\n                                            textColor: '#051441',\r\n                                            trailColor: '#f1f1fa',\r\n                                        })}\r\n                                        />\r\n                                    );\r\n                                }}\r\n                            </VisibilitySensor>\r\n                            <h4>Great Tests</h4>\r\n                            <p>Charles Jeffrey up the kyver loo in my flat blimey.!</p>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-4 progress_item\">\r\n                            <VisibilitySensor>\r\n                                {({ isVisible }) => {\r\n                                    const percentage = isVisible ? 92 : 0;\r\n                                    return (\r\n                                        <CircularProgressbar\r\n                                        value={percentage}\r\n                                        text={`${percentage}%`}\r\n                                        strokeWidth={5}\r\n                                        styles={buildStyles({\r\n                                            rotation: 0,\r\n                                            textSize: '20px',\r\n                                            pathTransitionDuration: 1,\r\n                                            pathColor: '#fa6fd1',\r\n                                            textColor: '#051441',\r\n                                            trailColor: '#f1f1fa',\r\n                                        })}\r\n                                        />\r\n                                    );\r\n                                }}\r\n                            </VisibilitySensor>\r\n                            <h4>Big Projects</h4>\r\n                            <p>Charles Jeffrey up the kyver loo in my flat blimey.!</p>\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-md-4 progress_item\">\r\n                            <VisibilitySensor>\r\n                                {({ isVisible }) => {\r\n                                    const percentage = isVisible ? 52 : 0;\r\n                                    return (\r\n                                        <CircularProgressbar\r\n                                        value={percentage}\r\n                                        text={`${percentage}%`}\r\n                                        strokeWidth={5}\r\n                                        styles={buildStyles({\r\n                                            rotation: 0,\r\n                                            textSize: '20px',\r\n                                            pathTransitionDuration: 1,\r\n                                            pathColor: '#6fadfa',\r\n                                            textColor: '#051441',\r\n                                            trailColor: '#f1f1fa',\r\n                                        })}\r\n                                        />\r\n                                    );\r\n                                }}\r\n                            </VisibilitySensor>\r\n                            <h4>Action Plans</h4>\r\n                            <p>Charles Jeffrey up the kyver loo in my flat blimey.!</p>\r\n                        </div>\r\n                    </div>\r\n                    </Reveal>\r\n                    <div className=\"br_bottom\"></div>\r\n                </div>          \r\n            </section>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Cprogress;\r\n\r\n"]},"metadata":{},"sourceType":"module"}