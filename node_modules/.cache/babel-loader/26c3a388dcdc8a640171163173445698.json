{"ast":null,"code":"/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nimport globalVars from './globalVars';\nimport leIE8 from './lib/leIE8'; // less then or equal to IE8\n\nimport mainEventConnectors from './mainEventConnectors'; // constants\n\nimport { DEFAULT_THROTTLE_RATE } from './constants';\n/**\n * Subscribe to UI events.\n * @method subscribe\n * @param {String} type - The type of event.\n * @param {Function} cb - The callback function.\n * @param {Object} options.context - The caller.\n * @param {Number} options.throttleRate - The amount of time for throttling.\n * @param {Boolean} options.useRAF - Use rAF for throttling if true.\n * @param {Object} options.eventOptions - Option to pass to event listener\n * @return {Object} The object with unsubscribe function.\n */\n\nfunction subscribe(type, cb) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var useRAF = options.useRAF || false;\n  var throttleRate = parseInt(options.throttleRate, 10);\n  var eventOptions = options.eventOptions;\n\n  if (isNaN(throttleRate)) {\n    throttleRate = DEFAULT_THROTTLE_RATE;\n  }\n\n  if (useRAF) {\n    throttleRate = 'raf';\n  } // turn off throttle if the browser is IE8 or less, because window.event will be reset\n  // when using any delayed function, i.g., setTimeout, or rAF.\n\n\n  if (leIE8) {\n    throttleRate = 0;\n  } // once those variables enabled, then never disabled.\n\n\n  globalVars.enableScrollInfo = globalVars.enableScrollInfo || options.enableScrollInfo || false;\n  globalVars.enableResizeInfo = globalVars.enableResizeInfo || options.enableResizeInfo || false;\n  globalVars.enableTouchInfo = globalVars.enableTouchInfo || options.enableTouchInfo || false;\n  return mainEventConnectors[type](throttleRate, cb, options, eventOptions);\n}\n\nexport default subscribe;","map":null,"metadata":{},"sourceType":"module"}