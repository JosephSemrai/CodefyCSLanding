'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _imagesloaded = require('imagesloaded');

var _imagesloaded2 = _interopRequireDefault(_imagesloaded);

var _lodash = require('lodash.omit');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ImagesLoaded = function (_Component) {
  _inherits(ImagesLoaded, _Component);

  function ImagesLoaded() {
    _classCallCheck(this, ImagesLoaded);

    return _possibleConstructorReturn(this, (ImagesLoaded.__proto__ || Object.getPrototypeOf(ImagesLoaded)).apply(this, arguments));
  }

  _createClass(ImagesLoaded, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          onAlways = _props.onAlways,
          done = _props.done,
          onFail = _props.onFail,
          onProgress = _props.onProgress,
          background = _props.background;
      var elemContainer = this.refs.elemContainer;

      /* Initializing imagesLoaded */

      this.imagesLoaded = (0, _imagesloaded2.default)(elemContainer, { background: background });

      // add events
      this.imagesLoaded.on('always', onAlways);
      this.imagesLoaded.on('done', done);
      this.imagesLoaded.on('fail', onFail);
      this.imagesLoaded.on('progress', onProgress);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var _props2 = this.props,
          onAlways = _props2.onAlways,
          done = _props2.done,
          onFail = _props2.onFail,
          onProgress = _props2.onProgress;

      // unbinding the events

      this.imagesLoaded.off('always', onAlways);
      this.imagesLoaded.off('done', done);
      this.imagesLoaded.off('fail', onFail);
      this.imagesLoaded.off('progress', onProgress);
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;

      var props = (0, _lodash2.default)(this.props, Object.keys(propTypes));

      return _react2.default.createElement(
        this.props.elementType,
        _extends({ ref: 'elemContainer' }, props),
        children
      );
    }
  }]);

  return ImagesLoaded;
}(_react.Component);

exports.default = ImagesLoaded;


ImagesLoaded.defaultProps = {
  elementType: 'div',
  className: 'images-loaded-container',
  background: false
};

var propTypes = {
  elementType: _propTypes2.default.string,
  onAlways: _propTypes2.default.func,
  done: _propTypes2.default.func,
  onFail: _propTypes2.default.func,
  onProgress: _propTypes2.default.func,
  background: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])
};